import requests
import pandas as pd
import ta  # pip install ta
import schedule
import time
from datetime import datetime
import pytz

# ==============================
# CONFIGURACI√ìN
# ==============================
TELEGRAM_TOKEN = "8007309562:AAHoY6yJgFNbr0-KAjtlcx911H-xauejlVUE"
CHAT_ID = "@MATEOAF_BOT"

# Monedas que quieres trackear
SYMBOLS = {
    "bitcoin": "BTC",
    "ethereum": "ETH",
    "cardano": "ADA",
    "solana": "SOL"
}

# ==============================
# FUNCIONES
# ==============================

def get_price_history(symbol_id, days=5, vs_currency="eur"):
    """Descarga precios hist√≥ricos (5 d√≠as) de CoinGecko."""
    url = f"https://api.coingecko.com/api/v3/coins/{symbol_id}/market_chart"
    params = {"vs_currency": vs_currency, "days": days, "interval": "hourly"}
    r = requests.get(url, params=params)
    data = r.json()
    prices = [p[1] for p in data["prices"]]
    times = [datetime.fromtimestamp(p[0] / 1000) for p in data["prices"]]
    df = pd.DataFrame({"time": times, "price": prices})
    return df

def calc_indicators(df):
    """Calcula RSI, MACD, SMA, EMA sobre el DataFrame."""
    df["SMA20"] = df["price"].rolling(window=20).mean()
    df["SMA50"] = df["price"].rolling(window=50).mean()
    df["EMA20"] = df["price"].ewm(span=20, adjust=False).mean()
    df["EMA50"] = df["price"].ewm(span=50, adjust=False).mean()
    df["RSI"] = ta.momentum.RSIIndicator(df["price"], window=14).rsi()
    macd = ta.trend.MACD(df["price"], window_slow=26, window_fast=12, window_sign=9)
    df["MACD"] = macd.macd()
    df["MACD_signal"] = macd.macd_signal()
    return df

def get_fear_greed():
    """Consulta √≠ndice de miedo/avaricia (API alternativa: alternative.me)."""
    url = "https://api.alternative.me/fng/"
    r = requests.get(url)
    data = r.json()
    value = data["data"][0]["value"]
    classification = data["data"][0]["value_classification"]
    return f"{value} ({classification})"

def send_telegram(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": message, "parse_mode": "Markdown"}
    requests.post(url, data=payload)

def generate_report():
    tz = pytz.timezone("Europe/Madrid")
    now = datetime.now(tz).strftime("%d-%m-%Y %H:%M:%S")
    msg = f"üìä *Alerta Cripto* ‚Äî {now}\n\n"

    for coin, symbol in SYMBOLS.items():
        df = get_price_history(coin, days=5)
        df = calc_indicators(df)
        latest = df.iloc[-1]

        price = latest["price"]
        rsi = round(latest["RSI"], 2)
        macd = round(latest["MACD"], 2)
        macd_signal = round(latest["MACD_signal"], 2)
        sma20 = round(latest["SMA20"], 2)
        sma50 = round(latest["SMA50"], 2)
        ema20 = round(latest["EMA20"], 2)
        ema50 = round(latest["EMA50"], 2)

        msg += f"üîπ *{symbol}*\n"
        msg += f"üí∞ Precio: ‚Ç¨{price:,.2f}\n"
        msg += f"üìà RSI: {rsi}\n"
        msg += f"üìä MACD: {macd} | Se√±al: {macd_signal}\n"
        msg += f"üìâ SMA20={sma20}, SMA50={sma50}\n"
        msg += f"üìâ EMA20={ema20}, EMA50={ema50}\n\n"

    fear_greed = get_fear_greed()
    msg += f"üò® √çndice Miedo/Avaricia: *{fear_greed}*\n"

    send_telegram(msg)

# ==============================
# SCHEDULER (ejecuciones fijas)
# ==============================

schedule.every().day.at("09:00").do(generate_report)
schedule.every().day.at("13:00").do(generate_report)
schedule.every().day.at("17:00").do(generate_report)
schedule.every().day.at("21:00").do(generate_report)

print("‚úÖ Bot corriendo‚Ä¶ enviar√° alertas a las 09:00, 13:00, 17:00 y 21:00 CEST")

while True:
    schedule.run_pending()
    time.sleep(30)



TELEGRAM_TOKEN = "8007309562:AAHoY6yJgFNbr0-KAjtlcx911H-xauejlVUE"
CHAT_ID = "MATEOAF_BOT"

